plot(x, y, col=heat.colors(100), pch=19)
plot(x, y, col=topo.colors(100), pch=19)
x <- rnorm(1000)
y <- rnorm(1000)
smoothScatter(x,y)
plot(x,y, col=rgb(0.45,0.48,0.3,0.55), pch=19)
plot(x, y, col=topo.colors(100), pch=19)
plot(x, y, col=heat.colors(100), pch=19)
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
plot(x,y, col=rgb(0.45,0.48,0.3,0.55), pch=19)
plot(x, y, col=topo.colors(100), pch=19)
plot(x, y, col=heat.colors(100), pch=19)
pal <- colorRamp(c("red", "blue"))
pal
pal(0)
pal(0.5)
t <- read.table("http://www.stat.umn.edu/geyer/5102/data/ex5-4.txt")
head(t)
out <- lm(y ~ x + color)
summary(out)
coef <- coefficients(out)
plot(x, y, col = as.character(color))
abline(coef["(Intercept)"] + coef["colorred"],
coef["x"], col = "red")
abline(coef["(Intercept)"] + coef["colorgreen"],
coef["x"], col = "green")
abline(coef["(Intercept)"], coef["x"], col = "blue")
attach(t)
out <- lm(y ~ x + color)
summary(out)
coef <- coefficients(out)
plot(x, y, col = as.character(color))
abline(coef["(Intercept)"] + coef["colorred"],
coef["x"], col = "red")
abline(coef["(Intercept)"] + coef["colorgreen"],
coef["x"], col = "green")
abline(coef["(Intercept)"], coef["x"], col = "blue")
color
header(t)
head(t)
t2 <- read.table("http://www.stat.umn.edu/geyer/5102/data/ex5-4.txt", header=FALSE)
t2
header(t2)
head(t2)
t2 <- read.table("http://www.stat.umn.edu/geyer/5102/data/ex5-4.txt", header=TRUE)
head(t2)
attach(t2)
detach(t)
attach(t2)
out <- lm(t2$y ~ t2$x + t2$color)
summary(out)
coef <- coefficients(out)
plot(x, y, col = as.character(color))
abline(coef["(Intercept)"] + coef["colorred"],
coef["x"], col = "red")
abline(coef["(Intercept)"] + coef["colorgreen"],
coef["x"], col = "green")
abline(coef["(Intercept)"], coef["x"], col = "blue")
out <- lm(t2$y ~ t2$x + t2$color)
summary(out)
coef <- coefficients(out)
plot(x, y, col = as.character(color))
coef
abline(coef["(Intercept)"] + coef["t2$colorred"],
coef["t2$x"], col = "red")
abline(coef["(Intercept)"] + coef["t2$colorred"],coef["t2$x"], col = "red")
abline(coef["(Intercept)"] + coef["t2$colorblue"],coef["t2$x"], col = "blue")
abline(coef["(Intercept)"] + coef["t2$colorgreen"],coef["t2$x"], col = "green")
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(x)
install.packages("swirl")
install.packages("RCurl")
install.packages("swirl")
install.packages("swirl")
ls
ls()
sum
sum(x)
sum(w)
sum?
()
?sum
?for
()
R.version.string
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z *2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
z *2 +100
z *2 +1000
my_div
1:20
pi:10
15:1
?':'
seq(1,29)
seq(1,20)
seq(1,20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_sq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
ls
ls()
w
x
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
?min
sum(w*(x-0.3)^2)
sum(w*(x-0.1471)^2)
sum(w*(x-0.0025)^2)
sum(w*(x-1.077)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x
y
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
regr <- lm(x ~ y)
summary(regr)
data(mtcars)
mtcars
lm?
8
?lm
?formula
regr <- lm(y ~ x)
summary(regr)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
summary(lm(y ~ x))
mtcars
summary(lm(mtcars.mpg ~ mtcars.weight))
mtcars[mpg]
mtcars['mpg']
summary(lm(mtcars['mpg'] ~ mtcars['weight']))
mtcars$weight
mtcars$mpg
?mtcars
summary(lm(mtcars$mpg ~ mtcars$wt))
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x - mean(x)) / sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
summary(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum( (x - mean(x))^2 )
mean(x)
swirl()
library_swirl()
ls
library(swirl)
swirl()
fit <- lm(child ~ parent, data=galton)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varChild
var(fit$residuals)
varRes <- var(fit$residuals)
varEst <- var(est())
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRest)
all.equal(varChild, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
data(mtcars)
mtcars
fit <- lm(mtcars$mpg ~ mtcars$wt)
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef
help(predict.lm)
predict(fit, interval=confidence)
predict(fit, interval="confidence")
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
predict(fit, mean(mtcars$wt), interval="confidence")
predict(fit, mtcars$wt, interval="confidence")
predict(fit, c(mean(mtcars$wt)), interval="confidence")
help(faithful)
n <- mtcars.frame(wt = mean(mtcars$weight))
n <- data.frame(wt = mean(mtcars$weight))
mean(mtcars$wt)
fit$df
sumCoef
predict(fit, interval="confidence")
mean(predict(fit, interval="confidence"))
p <- predict(fit, interval="confidence"))
p <- predict(fit, interval="confidence")
p
mean(p$lwr(})
mean(p$lwr)
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
help(mtcars)
> newdata = data.frame(waiting=80)
ewdata = data.frame(waiting=80)
newdata = data.frame(wt=mean(mtcars$wt))
newdata
mean(mtcars$wt)
predict(fit, newdata, interval="confidence")
newdata2 = mtcars.frame(wt=mean(mtcars$wt))
newdata
confint(fit, 'mtcars.wt', level=0.95)
confint(fit, mtcars.wt, level=0.95)
confint(fit, mtcars$wt, level=0.95)
p <- predict(fit, interval="prediction"))
p <- predict(fit, interval="prediction")
?predict
newdata = data.frame(wt=3.0)
newdata
predict(fit, newdata, interval="predict")
summary(fit)
p <- predict(fit, newdata, interval="predict")
p
p * 3
faithful
length(faithful)
m = data.frame(faithful, waiting=80)
m
data.frame(mtcars, wt=3)
newdata = data.frame(waiting=80)
newdata = data.frame(wt=3.0)
newdata
predict(fit, newdata, interval="prediction")
list(wt=3)
predict(fit, newdata=list(wt=3.0), interval="prediction")
attach(faithful)
eruption.lm <- lm(eruptions ~ waiting)
summary(eruption.lm)
nd = data.frame(waiting=80)
nd
predict(eruption.lm, nd, interval="prediction")
detach(faithful)
eruption.lm <- lm(eruptions ~ waiting)
summary(eruptions.lm)
attach(faithful)
eruption.lm <- lm(eruptions ~ waiting)
summary(eruptions.lm)
summary(eruption.lm)
nd = data.frame(waiting=80)
predict(fit, newdata=list(wt=3.0), interval="prediction")
predict(eruption.lm, nd, interval="confidence")
faithful
nd = data.frame(waiting=100)
predict(eruption.lm, nd, interval="confidence")
attach(mtcars)
newdata = data.frame(wt=3.0)
newdata
predict(fit), nd, interval="confidence")
predict(fit, newdata, interval="confidence")
newdata = data.frame(mtcars$wt=3.0)
a <- mtcars$mpg
x <- mtcars$wt
fitCar<-lm(a ~ x) #here you use x as a name
predict(fit, newdata, interval="confidence")
fit <- lm(mpg ~ wt)
summary(fit)
newdata <- data.frame(wt=3.0)
predict(fit, newdata, interval="predict")
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1]
sumCoef[2,2]
sumCoef
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[1,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1,1]*2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
33.45/2
sumCoef[1,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]/2
sumCoef
sumCoef[2,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]/2
sumCoef[2,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit2 <- lm(mpg ~ wt+100)
wt
wt2 <- wt+100
wt2
fit2 <- lm(mpg ~ wt2)
summary(fit2)
summary(fit)
summary$coef
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1]/2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1]*2 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
-6.4863 * c(2, 0.5)
fit3 <- lm(mpg ~ wt2 -1)
summary(fit3)
fit3
?fit3
?lm
summary(fit2)
resid(fit2)
sum(resid(fit2)^2)
sum(resid(fit3)^2)
sum(resid(fit2)^2)/sum(resid(fit3)^2)
sum(resid(fit3)^2)/sum(resid(fit2)^2)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(lm)
summary(fit)
cls
clear()
ls
mtcars$wt
fit <- lm(mtcars$mpg ~ mtcars$wt)
summary(fit)
fit <- lm(mpg ~ wt, data=mtcars)
summary(fit)
newdata = data.frame(wt=mean(wt))
newdata = data.frame(wt=mean(mtcars$wt))
newdata
predict(fit, newdata, interval="confidence")
fit2 <- lm(mpg ~ wt+100, data=mtcars)
x <- mtcars$wt
y <- mtcars$mpg
x <- mtcars$wt+100
ls
ls()
fit2 <- lm(y ~ x)
summary(fit2)
summary(fit)
fit3 <- lm(mpg ~ wt - 1, data=mtcars)
resid(fit1)
resid(fit) / resid(fit3)
?resid
residuals(fit)
fit
resid(fit) - fitted(fit)
fit3
sum(fit3$residuals^2) / sum(fit$residuals^2)
fit$residuals
sum(fit$residuals^2) / sum(fit3$residuals^2)
sum(fit$residuals^2) / sum(fit3$residuals^2)
summary(fit)
summary(fit3)
0.7197/0.7528
0.7528/0.7197
3.046/11.27
11.27/3.046
?lm
sse1 <- sum(fit$residuals^2)
sse3 <- sum(fit3$residuals^2)
sse1/sse3
getwd()
cd "Descargas"
cd Descargas
statistics.201603101110 <- read.csv("~/Descargas/statistics 201603101110.log", header=FALSE)
View(statistics.201603101110)
View(statistics.201603101111)
View(statistics.201603101110)
stat <- statistics.201603101110
stat
stat$v2
stat$2
stat$V2
help aggregate
help(aggregate)
aggregate(stat, list(ItemType=stat.V2), count)
aggregate(stat, list(ItemType=stat.V2), mean)
stat.V2
aggregate(stat, list(ItemType=stat$V2), mean)
help(count)
help(mean)
aggregate(stat, list(ItemType=stat$V2), FUN=count)
aggregate(stat, list(ItemType=stat$V2))
aggregate(stat, list(ItemType=stat$V2), FUN=sum)
x <- aggregate(stat, list(ItemType=stat$V2), FUN=sum)
x[0:10]
head(x,4)
head(x,10)
x
help(aggregate)
x <- aggregate($V1 ~ $V2, stat, sum)
x <- aggregate(V1 ~ V2, stat, sum)
head(x, 10)
head(x, 20)
x <- aggregate(V1 ~ V2, stat, FUN=function(x){return 1})
help(table)
summary(stat)
help(ddply)
??ddply
ddply(stat,.(contactGrp),
summarise,
count = length(contact[relpos == 0 & maxpos > 1]))
x <- aggregate(V1 ~ V2, stat, length)
head(x,15)
x <- aggregate(V2 ~ V1, stat, length)
head(x,15)
x
aggregateByItemType <- aggregate(V2 ~ V1, stat, length)
sum(aggregateByItemType$V2)
summary(aggregateByItemType)
sum(aggre)
sum(aggregateByItemType$v2)
sum(aggregateByItemType$V2)
total <- sum(aggregateByItemType$V2)
aggregateByType$freq <- aggregateByItemType$V2/total
aggregateByItemType$freq <- aggregateByItemType$V2/total
aggregateByItemType
??round
help(round)
help(trunc)
trunc(aggregateByItemType$freq,4) * 100
round(aggregateByItemType$freq,4) * 100
round(aggregateByItemType$freq,4) * 100
a <- aggregateByItemType$V2
a.freq = table(a)
a.freq
pie(a.freq)
pie(a)
a
pie(aggregateByItemType)
help(pie)
pie(aggregateByItemType$V2, aggregateByItemType$V1)
help(barplot)
barplot(aggregateByItemType$V2)
barplot(aggregateByItemType$V2,names.arg=aggregateByItemType$V1)
barplot(round(aggregateByItemType$V2,4)*100,names.arg=aggregateByItemType$V1)
barplot(round(aggregateByItemType$freq,4)*100,names.arg=aggregateByItemType$V1)
setwd("/home/connor/Dropbox/tesis/src/parse/mba")
library(arules)
tx <- read.transactions("ank-m4-txs.txt", sep=",")
dir()
tx <- read.transactions("ank-mr4-txs.txt", sep=",")
tx <- read.transactions("ank-mr4-txs.txt", sep=",")
inspect(tx[1:5])
itemFrequencyPlot(tx, support = 0.1)
itemFrequencyPlot(tx, support = 0.05)
itemFrequencyPlot(tx, support = 0.001)
itemFrequencyPlot(tx, support = 0.01)
itemFrequencyPlot(tx, support = 0.024)
rules <- apriori(tx, parameter = list(support=0.0025, confidence = 0.8, minlen = 2))
rules <- apriori(tx, parameter = list(support=0.0025, confidence = 0.9, minlen = 2))
rules <- apriori(tx, parameter = list(support=0.006, confidence = 0.9, minlen = 2))
rules <- apriori(tx, parameter = list(support=0.003, confidence = 0.9, minlen = 2))
rules <- apriori(tx, parameter = list(support=0.004, confidence = 0.9, minlen = 2))
rules <- apriori(tx, parameter = list(support=0.0045, confidence = 0.9, minlen = 2))
inspect(rules)[0:100]
inspect(sort(rules, by="lift")[0:100])
inspect(sort(rules, by="lift")[100:200])
rules <- apriori(tx, parameter = list(support=0.0040, confidence = 0.9, minlen = 2))
itemFrequencyPlot(tx, topN = 20)
load("~/Dropbox/tesis/src/parse/mba/testworkspace-rstudio.RData")
tx <- read.transactions("ank-mr4-txs.txt", sep=",")
rules <- apriori(tx, parameter = list(support=0.0040, confidence = 0.9, minlen = 2)) #Para |MR| >= 4 -> da 3279 reglas (ese support da que aparezcan 131 veces o mas)
as.data.frame.data.frame(rules)
as.data.frame(rules)
as(rules, "data.frame")
write.csv(as(rules, "data.frame"), file = "rules-ank-m4.csv")
save.image("~/Dropbox/tesis/src/parse/mba/testworkspace-rstudio.RData")
